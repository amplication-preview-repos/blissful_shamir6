/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumProfileCountry } from "./EnumProfileCountry";
import { IsEnum, IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { EnumProfileInterpretationMethod } from "./EnumProfileInterpretationMethod";
import { EnumProfileInterpretationType } from "./EnumProfileInterpretationType";
import { EnumProfileMinimumHours } from "./EnumProfileMinimumHours";
import { EnumProfilePreference } from "./EnumProfilePreference";
import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { RateListRelationFilter } from "../../rate/base/RateListRelationFilter";
import { EnumProfileState } from "./EnumProfileState";

@InputType()
class ProfileWhereInput {
  @ApiProperty({
    required: false,
    enum: EnumProfileCountry,
  })
  @IsEnum(EnumProfileCountry)
  @IsOptional()
  @Field(() => EnumProfileCountry, {
    nullable: true,
  })
  country?: "Option1";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstname?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  haveWorkedWithClient?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  haveWorkedWithMls?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    enum: EnumProfileInterpretationMethod,
  })
  @IsEnum(EnumProfileInterpretationMethod)
  @IsOptional()
  @Field(() => EnumProfileInterpretationMethod, {
    nullable: true,
  })
  interpretationMethod?: "Option1";

  @ApiProperty({
    required: false,
    enum: EnumProfileInterpretationType,
  })
  @IsEnum(EnumProfileInterpretationType)
  @IsOptional()
  @Field(() => EnumProfileInterpretationType, {
    nullable: true,
  })
  interpretationType?: "Option1";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastname?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  mileage?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumProfileMinimumHours,
  })
  @IsEnum(EnumProfileMinimumHours)
  @IsOptional()
  @Field(() => EnumProfileMinimumHours, {
    nullable: true,
  })
  minimumHours?: "Option1";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  nativeLanguages?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  notes?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  phone?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumProfilePreference,
  })
  @IsEnum(EnumProfilePreference)
  @IsOptional()
  @Field(() => EnumProfilePreference, {
    nullable: true,
  })
  preference?: "Option1";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  rateOtherComments?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  ratePerHour?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  ratePerWordBySource?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  ratePerWordByTarget?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: () => RateListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RateListRelationFilter)
  @IsOptional()
  @Field(() => RateListRelationFilter, {
    nullable: true,
  })
  rates?: RateListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  sourceLanguages?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumProfileState,
  })
  @IsEnum(EnumProfileState)
  @IsOptional()
  @Field(() => EnumProfileState, {
    nullable: true,
  })
  state?: "Option1";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  targetLanguages?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  tmFields?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  zipCode?: StringNullableFilter;
}

export { ProfileWhereInput as ProfileWhereInput };
